{"version":3,"sources":["../../../../server/api/generated/index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;uBAEO,SAAS;;;;sBACV,cAAc;;;;uCACA,6BAA6B;;;;sBAChD,QAAQ;;;;AAEtB,MAAM,CAAC,OAAO,GAAG,UAAS,eAAe,EAAE,gBAAgB,EAAE;;AAE3D,SAAO,gBAAgB,CAAC,eAAe,EAAE,gBAAgB,EAAE,qBAAQ,MAAM,EAAE,CAAC,CAAC;CAC9E,CAAC;;;;;;AAMF,SAAS,gBAAgB,CAAC,eAAe,EAAE,gBAAgB,EAAE,MAAM,EAAE;;AAEnE,MAAI,cAAc,GAAG,0CAAqB,eAAe,CAAC,CAAC;;AAE3D,QAAM,CAAC,GAAG,OAAK,oBAAO,gBAAgB,EAAI,cAAc,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC,CAAC;AACpG,QAAM,CAAC,GAAG,OAAK,oBAAO,gBAAgB,EAAI,cAAc,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,CAAC;;AAE/F,QAAM,CAAC,GAAG,CAAC,GAAG,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC;AACtC,QAAM,CAAC,GAAG,CAAC,cAAc,EAAE,cAAc,CAAC,OAAO,CAAC,CAAC;AACnD,QAAM,CAAC,GAAG,CAAC,MAAM,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;AACxC,QAAM,CAAC,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;AACxC,QAAM,CAAC,GAAG,CAAC,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;AAC1C,QAAM,CAAC,KAAK,CAAC,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;AAC5C,QAAM,UAAO,CAAC,MAAM,EAAE,cAAc,CAAC,OAAO,CAAC,CAAC;;AAE9C,SAAO,MAAM,CAAC;CACf;;;;;;AAMD,SAAS,cAAc,CAAC,EAAE,EAAE;AAC1B,SAAO,UAAS,GAAG,EAAE,GAAG,EAAE;AACxB,WAAO,EAAE,EAAE,CAAC,IAAI,CAAC,UAAC,OAAO,EAAK;AAC5B,aAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACtC,CAAC,SACI,CAAC,UAAC,GAAG,EAAK;AACd,aAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;AAC/C,aAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KACxB,CAAC,CAAC;GACJ,CAAA;CACF","file":"index.js","sourcesContent":["'use strict';\n\nimport express from 'express';\nimport config from '../../config';\nimport createCrudController from './generated.controller.crud';\nimport _ from 'lodash';\n\nmodule.exports = function(modelController, formlyController) {\n  //TODO user the Router as passed in via options\n  return createModelRoute(modelController, formlyController, express.Router());\n};\n\n/**\n * @param router\n * @returns {Function}\n */\nfunction createModelRoute(modelController, formlyController, router) {\n\n  let crudController = createCrudController(modelController);\n\n  router.get(`/${config.modelFormlyRoute}`, gettifyPromise(formlyController.createModelFormlyFields));\n  router.get(`/${config.modelColumnRoute}`, gettifyPromise(formlyController.createModelColumns));\n\n  router.get('/', crudController.index);\n  router.get('/:id/history', crudController.history);\n  router.get('/:id', crudController.show);\n  router.post('/', crudController.create);\n  router.put('/:id', crudController.create);\n  router.patch('/:id', crudController.create);\n  router.delete('/:id', crudController.destroy);\n\n  return router;\n}\n\n/**\n * @param fn\n * @returns {Function}\n */\nfunction gettifyPromise(fn) {\n  return function(req, res) {\n    return fn().then((payload) => {\n      return res.status(200).json(payload);\n    })\n    .catch((err) => {\n      console.error('Error gettifying promise', err);\n      return res.status(500);\n    });\n  }\n}\n"]}