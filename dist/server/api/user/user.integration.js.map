{"version":3,"sources":["../../../../server/api/user/user.integration.js"],"names":[],"mappings":"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","file":"user.integration.js","sourcesContent":["'use strict';\n\nconst cmeasy = require('../../app');\nconst express = require('express');\nimport User from './user.model';\nimport request from 'supertest';\n\ndescribe('User API:', function() {\n\n  this.timeout(10000);\n\n  let user;\n  let adminUser;\n  let app;\n  before(function() {\n    app = express();\n    return cmeasy({\n      express: app\n    })\n      .then(() => {\n        return User.findOne({\n          email: 'test@test.com'\n        });\n      })\n      .then((_user_) => {\n        user = _user_;\n        return User.findOne({\n          email: 'admin@admin.com'\n        });\n      })\n      .then((_adminUser_) => adminUser = _adminUser_);\n  });\n\n  after(function() {\n    return User.remove();\n  });\n\n  describe('GET /api/users', function() {\n\n    let token;\n    before(function(done) {\n      request(app)\n        .post('/admin/auth/local')\n        .send({\n          email: 'admin@admin.com',\n          password: 'admin'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          token = res.body.token;\n          done();\n        });\n    });\n\n    it('should not get a list of users if they are not authenticated', function(done) {\n      request(app)\n        .get('/admin/api/v1/users')\n        .expect(403)\n        .expect('Content-Type', /json/)\n        .end((err, res) => done());\n    });\n\n    it('should get a list of all users', function(done) {\n      console.log(token);\n      request(app)\n        .get('/admin/api/v1/users')\n        .set('authorization', 'Bearer ' + token)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          res.body.length.should.be.at.least(2);\n          done();\n        });\n    });\n\n    it('should get a single user', function(done) {\n      request(app)\n        .get('/admin/api/v1/users/' + user._id)\n        .set('authorization', 'Bearer ' + token)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          res.body.name.should.equal(user.name);\n          done();\n        });\n    });\n  });\n\n  describe('POST /api/users', function() {\n\n    var token;\n    before(function(done) {\n      request(app)\n        .post('/admin/auth/local')\n        .send({\n          email: 'test@test.com',\n          password: 'test'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          console.log(res.statusCode);\n          token = res.body.token;\n          done();\n        });\n    });\n\n    it('should fail to create a user', function(done) {\n      var createUser = {\n        email: 'create@create.com'\n      };\n      request(app)\n        .post('/admin/api/v1/users')\n        .set('authorization', 'Bearer ' + token)\n        .send(createUser)\n        .expect(422)\n        .expect('Content-Type', /json/)\n        .end((err, res) => done());\n    });\n\n    it('should fail to create a user with the same email', function(done) {\n      var createUser = {\n        email: 'test@test.com'\n      };\n      request(app)\n        .post('/admin/api/v1/users')\n        .set('authorization', 'Bearer ' + token)\n        .send(createUser)\n        .expect(422)\n        .expect('Content-Type', /json/)\n        .end((err, res) => done());\n    });\n\n    //Note: this needs to run after the GET tests otherwise there will be an added user to the index test\n    it('should create a user', function(done) {\n      var createUser = {\n        email: 'create@create.com',\n        password: 'create'\n      };\n      request(app)\n        .post('/admin/api/v1/users')\n        .set('authorization', 'Bearer ' + token)\n        .send(createUser)\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          res.body.token.should.not.equal(undefined);\n          res.body.email.should.equal(createUser.email);\n          done();\n        });\n    });\n  });\n\n  describe('DELETE /api/users', function() {\n\n    var token;\n    var deleteUser;\n    before(function(done) {\n      request(app)\n        .post('/admin/auth/local')\n        .send({\n          email: 'admin@admin.com',\n          password: 'admin'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          token = res.body.token;\n\n          //Create a user to delete\n          deleteUser = new User({\n            name: 'Delete User',\n            email: 'delete@delete.com',\n            password: 'password'\n          });\n\n          return deleteUser.save()\n            .then(function(savedUser) {\n              deleteUser = savedUser.toObject();\n              done();\n            });\n\n        });\n    });\n\n    it('should destroy a user', function(done) {\n      request(app)\n        .delete('/admin/api/v1/users/' + deleteUser._id)\n        .set('authorization', 'Bearer ' + token)\n        .expect(204)\n        .expect('Content-Type', /json/)\n        .end((err, res) => done());\n    });\n  });\n\n  describe('GET /api/users/me', function() {\n\n    var token;\n    before(function(done) {\n      request(app)\n        .post('/admin/auth/local')\n        .send({\n          email: 'test@test.com',\n          password: 'test'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          token = res.body.token;\n          done();\n        });\n    });\n\n    it('should respond with a user profile when authenticated', function(done) {\n      request(app)\n        .get('/admin/api/v1/users/me')\n        .set('authorization', 'Bearer ' + token)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          res.body._id.toString().should.equal(user._id.toString());\n          done();\n        });\n    });\n\n    it('should respond with a 401 when not authenticated', function(done) {\n      request(app)\n        .get('/admin/api/v1/users/me')\n        .expect(401)\n        .end(done);\n    });\n  });\n});\n"]}