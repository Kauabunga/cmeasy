{"version":3,"sources":["../../server/options.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;;;;;uBAEO,SAAS;;;;wBACR,UAAU;;;;oBAEd,MAAM;;;;;;iCAGJ,sBAAsB;;;;;;;;AAJzC,sBAAS,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;qBAUxB,YAAW;;AAExB,SAAO;AACL,QAAI,EAAE,gBAAgB;;;AAGtB,YAAQ,EAAE,WAAW,EAAE;;;AAGvB,WAAO,EAAE,UAAU,EAAE;;AAErB,aAAS,EAAE,OAAO;;AAElB,UAAM,EAAE,CACN,gBAAgB,EAAE,EAClB,YAAY,EAAE,CACf;GACF,CAAC;CAEH;;;;;AAMD,SAAS,YAAY,GAAE;AACrB,SAAO;;AAEL,QAAI,EAAE,WAAW;AACjB,aAAS,EAAE,KAAK;;AAEhB,iBAAa,EAAE,KAAK;AACpB,iBAAa,EAAE,KAAK;;AAEpB,cAAU,EAAE;AACV,WAAK,EAAE;AACL,YAAI,EAAE,QAAQ;AACd,aAAK,EAAE,YAAY;AACnB,qBAAa,EAAE,IAAI;OACpB;AACD,cAAQ,EAAE;AACR,YAAI,EAAE,QAAQ;AACd,aAAK,EAAE,eAAe;AACtB,gBAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC;OAC3B;AACD,aAAO,EAAE;AACP,YAAI,EAAE,QAAQ;AACd,aAAK,EAAE,cAAc;OACtB;KACF;GACF,CAAA;CACF;;;;;AAKD,SAAS,gBAAgB,GAAE;AACzB,SAAO;;AAEL,QAAI,EAAE,WAAW;AACjB,aAAS,EAAE,IAAI;;AAEf,cAAU,EAAE;AACV,WAAK,EAAE;AACL,YAAI,EAAE,QAAQ;AACd,aAAK,EAAE,iBAAiB;AACxB,mBAAS,yBAAyB;OACnC;KACF;GACF,CAAA;CACF;;;;;;;;;AASD,SAAS,UAAU,GAAE;AACnB,MAAI,GAAG,GAAG,2BAAS,CAAC;AACpB,MAAI,MAAM,GAAG,kBAAK,YAAY,CAAC,GAAG,CAAC,CAAC;;AAEpC,cAAY,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;;AAEvC,SAAO,GAAG,CAAC;CACZ;;;;;;;;AASD,SAAS,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE;AAChC,SAAO,YAAU;AACf,UAAM,CAAC,MAAM,CAAC,+BAAO,IAAI,EAAE,+BAAO,EAAE,EAAE,YAAW;AAC/C,aAAO,CAAC,GAAG,CAAC,4CAA4C,EAAE,+BAAO,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;KACxF,CAAC,CAAC;GACJ,CAAA;CACF;;AAED,SAAS,WAAW,GAAE;;AAEpB,wBAAS,OAAO,CAAC,+BAAO,KAAK,CAAC,GAAG,EAAE,+BAAO,KAAK,CAAC,OAAO,CAAC,CAAC;AACzD,wBAAS,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,GAAG,EAAE;AAC5C,WAAO,CAAC,KAAK,CAAC,4BAA4B,GAAG,GAAG,CAAC,CAAC;AAClD,WAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;GAClB,CAAC,CAAC;;AAEH,+BAAgB;CACjB","file":"options.js","sourcesContent":["/**\n * Main application routes\n */\n\n'use strict';\n\nimport express from 'express';\nimport mongoose from 'mongoose';\nmongoose.Promise = require('bluebird');\nimport http from 'http';\n\n//TODO remove the idea of a cmeasy config file\nimport config from './config/environment';\n\n\n/**\n *\n */\nexport default function() {\n\n  return {\n    name: 'Example Cmeasy',\n\n    //Use a mongoose instance defined outside of the Cmeasy scope\n    mongoose: getMongoose(),\n\n    //Use an express app instance defined outside of the Cmeasy scope\n    express: getExpress(),\n\n    rootRoute: 'admin',\n\n    models: [\n      getHomePageModel(),\n      getBlogModel()\n    ]\n  };\n\n}\n\n\n/**\n *\n */\nfunction getBlogModel(){\n  return {\n\n    name: 'Blog Post',\n    singleton: false,\n\n    disableDelete: false,\n    disableCreate: false,\n\n    definition: {\n      title: {\n        type: 'String',\n        label: 'Blog Title',\n        displayColumn: true\n      },\n      category: {\n        type: 'Select',\n        label: 'Blog category',\n        enum: ['Update', 'Random']\n      },\n      content: {\n        type: 'String',\n        label: 'Blog Content'\n      }\n    }\n  }\n}\n\n/**\n *\n */\nfunction getHomePageModel(){\n  return {\n\n    name: 'Home Page',\n    singleton: true,\n\n    definition: {\n      title: {\n        type: 'String',\n        label: 'Home Page Title',\n        default: 'Default Home Page Title'\n      }\n    }\n  }\n}\n\n/**\n *\n * TODO Extend this example a little farther so we are able to serve up a static index / another route entirely\n * TODO Validate express addons non conflicting - namespace addons/addons only to selected root route?\n *\n * @returns {*}\n */\nfunction getExpress(){\n  var app = express();\n  var server = http.createServer(app);\n\n  setImmediate(startServer(app, server));\n\n  return app;\n}\n\n\n/**\n * Start server\n *\n * @param server\n * @returns {Function}\n */\nfunction startServer(app, server) {\n  return function(){\n    server.listen(config.port, config.ip, function() {\n      console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\n    });\n  }\n}\n\nfunction getMongoose(){\n\n  mongoose.connect(config.mongo.uri, config.mongo.options);\n  mongoose.connection.on('error', function(err) {\n    console.error('MongoDB connection error: ' + err);\n    process.exit(-1);\n  });\n\n  return mongoose;\n}\n"]}