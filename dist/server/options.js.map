{"version":3,"sources":["../../server/options.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;wBAEQ,UAAU;;;;;;sBAIZ,UAAU;;;;AAH7B,sBAAS,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;qBAKxB,YAAW;AACxB,SAAO;AACL,QAAI,EAAE,gBAAgB;;;AAGtB,YAAQ,EAAE,WAAW,EAAE;;AAEvB,QAAI,EAAE,oBAAO,IAAI;;AAEjB,MAAE,EAAE,oBAAO,EAAE;;AAEb,aAAS,EAAE,OAAO;;AAElB,UAAM,EAAE,CACN,gBAAgB,EAAE,EAClB,YAAY,EAAE,CACf;GACF,CAAC;CACH;;AAED,SAAS,YAAY,GAAG;AACtB,SAAO;;AAEL,QAAI,EAAE,WAAW;AACjB,aAAS,EAAE,KAAK;;AAEhB,iBAAa,EAAE,KAAK;AACpB,iBAAa,EAAE,KAAK;;AAEpB,cAAU,EAAE;AACV,WAAK,EAAE;AACL,YAAI,EAAE,QAAQ;AACd,aAAK,EAAE,YAAY;AACnB,qBAAa,EAAE,IAAI;OACpB;AACD,cAAQ,EAAE;AACR,YAAI,EAAE,QAAQ;AACd,aAAK,EAAE,eAAe;AACtB,gBAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC;OAC3B;AACD,aAAO,EAAE;AACP,YAAI,EAAE,MAAM;AACZ,aAAK,EAAE,cAAc;OACtB;KACF;GACF,CAAA;CACF;;AAED,SAAS,gBAAgB,GAAG;AAC1B,SAAO;;AAEL,QAAI,EAAE,WAAW;AACjB,aAAS,EAAE,IAAI;;AAEf,cAAU,EAAE;AACV,WAAK,EAAE;AACL,YAAI,EAAE,QAAQ;AACd,aAAK,EAAE,iBAAiB;AACxB,mBAAS,yBAAyB;OACnC;KACF;GACF,CAAA;CACF;;AAED,SAAS,WAAW,GAAG;AACrB,MAAI,CAAC,sBAAS,UAAU,CAAC,UAAU,EAAE;AACnC,0BAAS,OAAO,CAAC,oBAAO,KAAK,CAAC,GAAG,EAAE,oBAAO,KAAK,CAAC,OAAO,CAAC,CAAC;AACzD,0BAAS,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,GAAG,EAAE;AAC5C,aAAO,CAAC,KAAK,CAAC,4BAA4B,GAAG,GAAG,CAAC,CAAC;AAClD,aAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAClB,CAAC,CAAC;GACJ;AACD,+BAAgB;CACjB","file":"options.js","sourcesContent":["'use strict';\n\nimport mongoose from 'mongoose';\nmongoose.Promise = require('bluebird');\n\n// TODO remove the idea of a cmeasy config file\nimport config from './config';\n\nexport default function() {\n  return {\n    name: 'Example Cmeasy',\n\n    // Use a mongoose instance defined outside of the Cmeasy scope\n    mongoose: getMongoose(),\n\n    port: config.port,\n\n    ip: config.ip,\n\n    rootRoute: 'admin',\n\n    models: [\n      getHomePageModel(),\n      getBlogModel()\n    ]\n  };\n}\n\nfunction getBlogModel() {\n  return {\n\n    name: 'Blog Post',\n    singleton: false,\n\n    disableDelete: false,\n    disableCreate: false,\n\n    definition: {\n      title: {\n        type: 'String',\n        label: 'Blog Title',\n        displayColumn: true\n      },\n      category: {\n        type: 'Select',\n        label: 'Blog category',\n        enum: ['Update', 'Random']\n      },\n      content: {\n        type: 'Html',\n        label: 'Blog Content'\n      }\n    }\n  }\n}\n\nfunction getHomePageModel() {\n  return {\n\n    name: 'Home Page',\n    singleton: true,\n\n    definition: {\n      title: {\n        type: 'String',\n        label: 'Home Page Title',\n        default: 'Default Home Page Title'\n      }\n    }\n  }\n}\n\nfunction getMongoose() {\n  if (!mongoose.connection.readyState) {\n    mongoose.connect(config.mongo.uri, config.mongo.options);\n    mongoose.connection.on('error', function(err) {\n      console.error('MongoDB connection error: ' + err);\n      process.exit(-1);\n    });\n  }\n  return mongoose;\n}\n"]}