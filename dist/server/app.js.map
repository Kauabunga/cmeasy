{"version":3,"sources":["../../server/app.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;oBAGI,MAAM;;;;sBACJ,UAAU;;;;AAF7B,IAAM,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;AAI1C,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,SAAS,gBAAgB,GAAmB;MAAlB,WAAW,yDAAG,EAAE;;AAEnE,SAAO,oBAAO,MAAM,CAAC,WAAW,CAAC,CAC9B,IAAI,CAAC,SAAS,cAAc,CAAC,MAAM,EAAE;;;;gCAGhB,oBAAoB,CAAC,MAAM,CAAC;;QAA3C,GAAG,yBAAH,GAAG;QAAE,MAAM,yBAAN,MAAM;;AAEhB,WAAO,CAAC,kBAAkB,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;;;AAIrD,WAAO,CAAC,kBAAkB,CAAC,CAAC,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;AAEvD,WAAO,CAAC,iBAAiB,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;AAExC,WAAO,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;AAEjC,QAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,uBAAuB,EAAE,EAAE;AAClD,kBAAY,CAAC,kBAAkB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;KACvD;;AAED,WAAO,MAAM,CAAC;GACf,CAAC,CAAC;CACN,CAAC;;AAEF,SAAS,oBAAoB,CAAC,MAAM,EAAE;AACpC,MAAI,GAAG,CAAC;AACR,MAAI,MAAM,CAAC;;AAEX,MAAI,MAAM,CAAC,UAAU,EAAE,CAAC,uBAAuB,EAAE,EAAE;;AAEjD,OAAG,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC;GACxC,MAAM;AACL,OAAG,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC;AACzC,UAAM,GAAG,kBAAK,YAAY,CAAC,GAAG,CAAC,CAAC;GACjC;;AAED,SAAO;AACL,OAAG,EAAE,GAAG;AACR,UAAM,EAAE,MAAM;GACf,CAAA;CACF;;;;;;;;AAQD,SAAS,kBAAkB,CAAC,MAAM,EAAE,WAAW,EAAE;AAC/C,SAAO,SAAS,WAAW,GAAG;AAC5B,UAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE,EAAE,SAAS,cAAc,GAAG;AACxE,aAAO,CAAC,GAAG,kCAAgC,WAAW,CAAC,IAAI,aAAQ,WAAW,CAAC,EAAE,WAAQ,CAAC;KAC3F,CAAC,CAAC;GACJ,CAAA;CACF","file":"app.js","sourcesContent":["'use strict';\n\nconst config = require('./config/config');\nimport http from 'http';\nimport Cmeasy from './cmeasy';\n\nexports = module.exports = function initialiseCmeasy(userOptions = {}) {\n\n  return Cmeasy.create(userOptions)\n    .then(function cmeasyCallback(cmeasy) {\n\n      // TODO move handle mongo connect from cmeasy options here?\n      var {app, server} = prepareExpressServer(cmeasy);\n\n      require('./config/express').coreExpress(app, cmeasy);\n\n      // TODO serve up static routes base on rootRoute configuration....\n      // i.e. /assets/fonts/xyz.font needs to be served up as /rootRoute/assets/fonts/xyz.font\n      require('./config/express').staticExpress(app, cmeasy);\n\n      require('./routes-cmeasy')(app, cmeasy);\n\n      require('./routes')(app, cmeasy);\n\n      if (!cmeasy.getOptions().isUserDefinedExpressApp()) {\n        setImmediate(startExpressServer(server, userOptions));\n      }\n\n      return cmeasy;\n    });\n};\n\nfunction prepareExpressServer(cmeasy) {\n  var app;\n  var server;\n\n  if (cmeasy.getOptions().isUserDefinedExpressApp()) {\n    // TODO validate correctly configured express app?\n    app = cmeasy.getOptions().getExpress();\n  } else {\n    app = cmeasy.getOptions().getExpress()();\n    server = http.createServer(app);\n  }\n\n  return {\n    app: app,\n    server: server\n  }\n}\n\n/**\n * Start server\n *\n * @param server\n * @returns {Function}\n */\nfunction startExpressServer(server, userOptions) {\n  return function startServer() {\n    server.listen(userOptions.port, userOptions.ip, function listenCallback() {\n      console.log(`Express server listening on ${userOptions.port}, in ${userOptions.ip} mode`);\n    });\n  }\n}\n"]}