{"version":3,"sources":["../../server/app.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;iCAGM,sBAAsB;;;;oBAExB,MAAM;;;;sBACT,QAAQ;;;;sBACH,UAAU;;;;;;;;;;;AAU7B,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,YAA2B;MAAlB,WAAW,yDAAI,EAAE;;AAEnD,SAAO,wBAAW,WAAW,CAAC,CAC3B,IAAI,CAAC,UAAS,MAAM,EAAC;2BAEU,eAAe,CAAC,MAAM,CAAC;;QAAhD,GAAG,oBAAH,GAAG;QAAE,MAAM,oBAAN,MAAM;QAAE,QAAQ,oBAAR,QAAQ;;AAE1B,WAAO,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,CAAC;;AAEvC,WAAO,CAAC,kBAAkB,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;;AAE7C,WAAO,CAAC,iBAAiB,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;AAExC,WAAO,CAAC,kBAAkB,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;;AAE/C,WAAO,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;AAEjC,gBAAY,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;;AAEvC,WAAO,GAAG,CAAC;GACZ,CAAC,CAAC;CAGN,CAAC;;;;;AAMF,SAAS,eAAe,CAAC,MAAM,EAAC;AAC9B,MAAI,GAAG,GAAG,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC;AAChC,MAAI,MAAM,GAAG,kBAAK,YAAY,CAAC,GAAG,CAAC,CAAC;AACpC,MAAI,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE;AAC1C,eAAW,EAAE,+BAAO,GAAG,KAAK,YAAY;AACxC,QAAI,EAAE,mBAAmB;GAC1B,CAAC,CAAC;;AAEH,SAAO;AACL,OAAG,EAAE,GAAG;AACR,UAAM,EAAE,MAAM;AACd,YAAQ,EAAE,QAAQ;GACnB,CAAA;CACF;;;;;;;;AASD,SAAS,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE;AAChC,SAAO,YAAU;AACf,UAAM,CAAC,MAAM,CAAC,+BAAO,IAAI,EAAE,+BAAO,EAAE,EAAE,YAAW;AAC/C,aAAO,CAAC,GAAG,CAAC,4CAA4C,EAAE,+BAAO,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;KACxF,CAAC,CAAC;GACJ,CAAA;CACF","file":"app.js","sourcesContent":["/**\n * Main application file\n */\n\n'use strict';\n\n\nimport config from './config/environment';\n\nimport http from 'http';\nimport _ from 'lodash';\nimport Cmeasy from './cmeasy';\n\n\n/**\n * Expose app\n *\n * TODO expose as app and also expose as express route\n *\n * @type {Function}\n */\nexports = module.exports = function(userOptions  = {}){\n\n  return new Cmeasy(userOptions)\n    .then(function(cmeasy){\n\n      let {app, server, socketio} = connectToServer(cmeasy);\n\n      require('./config/socketio')(socketio);\n\n      require('./config/express').coreExpress(app);\n\n      require('./routes-cmeasy')(app, cmeasy);\n\n      require('./config/express').staticExpress(app);\n\n      require('./routes')(app, cmeasy);\n\n      setImmediate(startServer(app, server));\n\n      return app;\n    });\n\n\n};\n\n\n/**\n *\n */\nfunction connectToServer(cmeasy){\n  let app = cmeasy.getExpress()();\n  let server = http.createServer(app);\n  let socketio = require('socket.io')(server, {\n    serveClient: config.env !== 'production',\n    path: '/socket.io-client'\n  });\n\n  return {\n    app: app,\n    server: server,\n    socketio: socketio\n  }\n}\n\n\n/**\n * Start server\n *\n * @param server\n * @returns {Function}\n */\nfunction startServer(app, server) {\n  return function(){\n    server.listen(config.port, config.ip, function() {\n      console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\n    });\n  }\n}\n"]}