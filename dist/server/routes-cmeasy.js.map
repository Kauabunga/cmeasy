{"version":3,"sources":["../../server/routes-cmeasy.js"],"names":[],"mappings":"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","file":"routes-cmeasy.js","sourcesContent":["/**\n * Cmeasy application routes\n */\n\n'use strict';\n\nimport renderIndex from './components/render-index/index';\nimport auth from './auth/index';\nimport user from './api/user/index';\nimport _ from 'lodash';\nimport Promise from 'bluebird';\n\n/**\n *\n */\nexport default function(app, cmeasy) {\n\n  app.use(`/${cmeasy.getRootRoute()}/auth`, auth);\n  app.use(`/${cmeasy.getApiRoute()}/v1/users`, user);\n\n  app.use(`/${cmeasy.getApiRoute()}/v1/content/schemacomplete`, getCompleteSchemaList(cmeasy));\n\n  app.use(`/${cmeasy.getApiRoute()}/v1/content/schema`, routeSchemaRequest(cmeasy));\n  app.use(`/${cmeasy.getApiRoute()}/v1/content/:type?`, routeContentRequest(cmeasy));\n\n  app.use(`/${cmeasy.getRootRoute()}`, renderIndex(app, cmeasy));\n\n}\n\n/**\n * TODO ensure that the connection to the database has been achieved before resolving any of these flows\n */\nfunction routeContentRequest(cmeasy){\n  return function(req, res, next){\n\n    console.log('Routing content request', req.params.type, req.url);\n\n    if(! req.params.type) {\n      //Get all content\n      //TODO move into cmeasy/schema service\n\n      return cmeasy.getSchemaController().index()\n        .then(function(schemas){\n          return Promise.all(_(schemas)\n            .map(function(schema){\n              return [\n                cmeasy.getModel(schema.meta[cmeasy.getIdKey()]),\n                schema\n              ];\n            })\n            .map(function([model, schema]){\n              if(! model){\n                return cmeasy.createModel(schema).getModelController().indexClean();\n              }\n              else {\n                return model.getModelController().indexClean();\n              }\n            })\n            .value())\n            .then(function(...indexes){\n              return _(indexes).filter().value();\n            });\n        })\n        .then(function (...indexes){\n          console.log('All content', indexes);\n          return res.json(indexes);\n        })\n        .catch(function(err){\n          console.error('Error getting all content', err);\n          return res.sendStatus(500);\n        });\n\n\n    }\n    else {\n      //Return specific content\n      return cmeasy.getSchemaController().index()\n        .then(filterSchemaById(cmeasy, req.params.type))\n        .then(function(schema){\n          if(! schema){\n            return undefined;\n          }\n          else {\n            var cmeasyModel = cmeasy.getModel(req.params.type);\n            if( ! cmeasyModel ){\n              return cmeasy.createModel(schema);\n            }\n            else {\n              return cmeasyModel;\n            }\n          }\n        })\n        .then(function(cmeasyModel){\n          if(cmeasyModel){\n            return cmeasyModel.getModelCrud()(req, res, next);\n          }\n          else {\n            return res.sendStatus(404);\n          }\n        });\n    }\n  }\n}\n\n/**\n *\n * @param cmeasy\n * @returns {Function}\n */\nfunction getCompleteSchemaList(cmeasy){\n  return function(req, res, next){\n    cmeasy.getSchemaController().index()\n      .then(function(completeSchema){\n        return res.status(200).json(completeSchema);\n      })\n      .catch(function(err){\n        console.error('Error getting compelte schema list', err);\n        return res.sendStatus(500);\n      });\n  }\n}\n\n\n\n/**\n *\n * @param type\n * @returns {Function}\n */\nfunction filterSchemaById(cmeasy, type){\n  return function(schemas){\n    return _(schemas).filter(function(schema){\n      return schema.meta[cmeasy.getIdKey()] === type;\n    }).first();\n  }\n}\n\n/**\n *\n */\nfunction routeSchemaRequest(cmeasy){\n  return function(req, res, next){\n\n    console.log('Routing schema request', req.url);\n\n    //get content type from req\n    return cmeasy.getSchemaCrud()(req, res, next);\n  }\n}\n\n"]}