{"version":3,"sources":["../../../../server/components/render-index/render-index.integration.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;uBAKO,SAAS;;;;yBACT,WAAW;;;;uBACX,SAAS;;;;AAL7B,IAAM,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACpC,IAAM,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,EAAE,CAAC;AAC3C,IAAM,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAKzC,QAAQ,CAAC,mBAAmB,EAAE,UAAS,IAAI,EAAE;;AAE3C,MAAI,GAAG,YAAA,CAAC;AACR,QAAM,CAAC,UAAS,IAAI,EAAE;AACpB,OAAG,GAAG,2BAAS,CAAC;AAChB,WAAO,CAAC,OAAO,GAAG,GAAG,CAAC;;AAEtB,cAAU,CAAC,OAAO,CAAC,UAAS,KAAK,EAAE,IAAI,EAAE;AACvC,UAAI,KAAK,EAAE;AACT,eAAO,IAAI,CAAC,KAAK,CAAC,CAAC;OACpB;AACD,aAAO,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;AACxB,YAAM,CAAC,OAAO,CAAC,CACZ,IAAI,CAAC,YAAW;AACf,YAAI,EAAE,CAAC;OACR,CAAC,CAAC;KACN,CAAC,CAAC;GACJ,CAAC,CAAC;;;;;AAKH,IAAE,CAAC,sDAAsD,EAAE,UAAS,IAAI,EAAE;AACxE,gCAAQ,GAAG,CAAC,CACT,GAAG,CAAC,SAAS,CAAC,CACd,MAAM,CAAC,GAAG,CAAC,CACX,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;;AAEjB,aAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;;AAEpD,UAAI,CAAC,GAAG,qBAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;AAE/B,UAAI,uBAAuB,GAAG,CAAC,CAAC,0BAA0B,CAAC,CAAC;AAC5D,UAAI,iBAAiB,GAAG,uBAAuB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;;;AAGxE,6BAAuB,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;AAE/C,uBAAiB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;;AAG/D,uBAAiB,CAAC,OAAO,CAAC,mDAAmD,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEpG,UAAI,EAAE,CAAC;KACR,CAAC,CAAC;GACN,CAAC,CAAC;CACJ,CAAC,CAAC","file":"render-index.integration.js","sourcesContent":["'use strict';\n\nconst cmeasy = require('../../app');\nconst options = require('../../options')();\nconst portfinder = require('portfinder');\nimport express from 'express';\nimport request from 'supertest';\nimport cheerio from 'cheerio';\n\ndescribe('Render index api:', function(done) {\n\n  let app;\n  before(function(done) {\n    app = express();\n    options.express = app;\n\n    portfinder.getPort(function(error, port) {\n      if (error) {\n        return done(error);\n      }\n      process.env.PORT = port;\n      cmeasy(options)\n        .then(function() {\n          done();\n        });\n    });\n  });\n\n  // TODO need a test to handle the route /admin\n  // TODO need a test to handle a different rootRoute\n  // TODO need a test to ensure that the referenced resources are served correctly\n  it('Should inject variables into the index.template.html', function(done) {\n    request(app)\n      .get('/admin/')\n      .expect(200)\n      .end((err, res) => {\n\n        console.log('Render index api res.text:', res.text);\n\n        var $ = cheerio.load(res.text);\n\n        var injectedVariablesScript = $('#cmeasyInjectedVariables');\n        var injectedVariables = injectedVariablesScript.get(0).children[0].data;\n\n        //Ensure there is only a single injected script\n        injectedVariablesScript.length.should.equal(1);\n\n        injectedVariables.indexOf('\"env\":\"test\"').should.not.equal(-1);\n\n        // TODO smarter regex to test _cmeasyId\":{ ..... blogPost ..... }\n        injectedVariables.indexOf('\"_cmeasyId\":{\"type\":\"String\",\"default\":\"blogPost\"').should.not.equal(-1);\n\n        done();\n      });\n  });\n});\n\n\n"]}