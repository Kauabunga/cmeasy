{"version":3,"sources":["../../../../server/components/cmeasy/cmeasy.controller.formly.js"],"names":[],"mappings":"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","file":"cmeasy.controller.formly.js","sourcesContent":["\n'use strict';\n\nimport _ from 'lodash';\nimport {Promise} from 'bluebird';\nimport flatten from './cmeasy.flatten.service';\n\n/**\n *\n */\nexport default function(id, schemaController){\n\n  return {\n    createModelFormlyFields: createModelFormlyFields(id, schemaController),\n    createModelColumns: createModelColumns(id, schemaController)\n  };\n\n}\n\n/**\n *\n * @param model\n */\nfunction createModelColumns(id, schemaController){\n  return function(){\n    return schemaController.show(id)\n      .then(getSchemaDefinition)\n      .then(flatten)\n      .then(function(modelSchema){\n        return _(modelSchema)\n          .map(shouldDisplayColumn)\n          .filter()\n          .value();\n      });\n  };\n}\n\n/**\n *\n * @param model\n */\nfunction createModelFormlyFields(id, schemaController){\n  return function(){\n    return schemaController.show(id)\n      .then(getSchemaDefinition)\n      .then(flatten)\n      .then(function(modelSchema){\n        return _(modelSchema)\n          .map(getPathField)\n          .filter()\n          .value();\n      });\n  }\n}\n\n\n/**\n *\n * @param type\n */\nfunction getPathField(path, key){\n\n  if( excludedProperties(path) ){\n    return undefined;\n  }\n  else {\n    console.log('getPathField', path, path.type.toString().toLowerCase());\n    return _.merge(getDefaultField(path), getFieldTypeMap()[path.type.toString().toLowerCase()](path, key));\n  }\n\n}\n/**\n *\n */\nfunction getFieldTypeMap(){\n  return {\n\n    array: function(path){\n      //TODO\n\n      //if(path.options.autocomplete){\n      //  field.templateOptions.autocompleteLabel = path.options.autocompleteLabel;\n      //  field.templateOptions.autocompleteType = path.options.autocompleteType;\n      //  field.templateOptions.autocompleteId = path.options.autocompleteId;\n      //  field.templateOptions.autocompleteChip = path.options.autocompleteChip;\n      //  field.type = 'mdChipsAutocomplete';\n      //}\n      //else if (path.options.displayLink){\n      //  field.templateOptions.linkType = path.options.linkType;\n      //  field.templateOptions.linkId = path.options.linkId;\n      //  field.type = 'adminLink';\n      //}\n      //else {\n      //  //Assume only a single depth\n      //  field.templateOptions.fields = [];\n      //  _.map(path.schema.paths, function(path){\n      //    var pathField = getPathField(path);\n      //    if(pathField){ field.templateOptions.fields.push(pathField); }\n      //  });\n      //  field.type = 'adminRepeat';\n      //}\n    },\n\n    select: function(path){\n      return {\n        type: 'mdSelect',\n        templateOptions: {selectOptions: path.enum }\n      };\n    },\n\n    string: function(path){\n      if(path.html){\n        return { type: 'WYSIWYG'};\n      }\n      else {\n        return { type: 'mdInput'};\n      }\n    },\n\n    number: function(path){\n      //TODO\n      return { type: 'mdInput'};\n    },\n\n    boolean: function(path){\n      return { type: 'mdCheckbox'};\n    },\n\n    __schematype__: function(path){\n      return { type: 'cmeasyMetaRepeat' };\n    }\n  };\n}\n\n\n/**\n *\n * @param path\n */\nfunction getDefaultField(path){\n  return {\n    key: path.path,\n    templateOptions: {\n      label: path.label || convertPathToLabel(path.path),\n      cssClass: path.cssClass || ''\n    }\n  };\n}\n\n\n\n/**\n *\n * @param model\n */\nfunction getSchemaDefinition(schema){\n  return schema.definition;\n}\n\n\n/**\n *\n * @param text\n */\nfunction convertPathToLabel(text){\n  return _(text.split('.')).map(function(splitText){\n    return unCamelCase(splitText);\n  }).value().join(' -> ');\n}\n\n/**\n *\n */\nfunction unCamelCase(text){\n  // insert a space before all caps\n  return text.replace(/([A-Z])/g, ' $1')\n    // uppercase the first character\n    .replace(/^./, function(str){ return str.toUpperCase(); });\n}\n\n/**\n *\n * @param path\n * @param key\n * @returns {*}\n */\nfunction shouldDisplayColumn(path, key){\n  return path && path.displayColumn ? key : undefined;\n}\n\n/**\n *\n * @param path\n * @returns {boolean}\n */\nfunction excludedProperties(path){\n\n  //if disable display is undefined then use the disableEdit\n  var disableProperty = path.disableDisplay !== undefined ? 'disableDisplay' : 'disableEdit';\n\n  if(path && path[disableProperty]){\n    return true;\n  }\n\n  //TODO configure this from excluded properties\n  return ['__v', '_id', 'author', 'comment', 'dateCreated'].indexOf(path.path) !== -1;\n}\n\n"]}