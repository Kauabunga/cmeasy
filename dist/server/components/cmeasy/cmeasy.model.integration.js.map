{"version":3,"sources":["../../../../server/components/cmeasy/cmeasy.model.integration.js"],"names":[],"mappings":"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","file":"cmeasy.model.integration.js","sourcesContent":["'use strict';\n\nconst cmeasy = require('../../app');\nconst express = require('express');\nconst options = require('../../options')();\nconst portfinder = require('portfinder');\nimport request from 'supertest';\nimport Promise from 'bluebird';\nimport uuid from 'uuid';\nimport _ from 'lodash';\n\ndescribe('Cmeasy blogPost model API:', function() {\n\n  this.timeout(6000);\n\n  let app;\n  let blogPostItem;\n  before(function(done) {\n    app = express();\n    options.express = app;\n\n    portfinder.getPort(function(error, port) {\n      if (error) {\n        return done(error);\n      }\n      process.env.PORT = port;\n      cmeasy(options)\n        .then(function() {\n          done();\n        });\n    });\n  });\n\n  describe('POST /api/v1/content/blogPost', function() {\n    before(createDummyBlogPost);\n    after(deleteDummyBlogPost);\n    it('should create a blog post entry', function(done) {\n      var newBlogPost = _.merge(blogPostItem, getDefaultBlogPost());\n      request(app)\n        .post('/admin/api/v1/content/blogPost')\n        .send(newBlogPost)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          res.body.title.toString().should.equal(newBlogPost.title.toString());\n          res.body.content.toString().should.equal(newBlogPost.content.toString());\n          done();\n        });\n    });\n  });\n\n  describe('GET /api/v1/content/blogPost', function() {\n    before(createDummyBlogPost);\n    after(deleteDummyBlogPost);\n    it('should get a blog post entry', function(done) {\n      request(app)\n        .get('/admin/api/v1/content/blogPost/' + blogPostItem._cmeasyInstanceId.toString())\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          res.body.title.toString().should.equal(blogPostItem.title.toString());\n          res.body.content.toString().should.equal(blogPostItem.content.toString());\n          done();\n        });\n    });\n  });\n\n  describe('GET /api/v1/content/blogPost', function() {\n    before(() => {\n      return createDummyBlogPost()\n        .then(createDummyBlogPost)\n        .then(createDummyBlogPost)\n        .then(createDummyBlogPost)\n        .then(createDummyBlogPost);\n    });\n    after(deleteAllDummyBlogPost);\n    it('should get a all blog post entry', function(done) {\n      request(app)\n        .get('/admin/api/v1/content/blogPost')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          res.body.length.should.equal(5);\n          done();\n        });\n    });\n  });\n\n  function createDummyBlogPost() {\n    return new Promise((success) => {\n      return request(app)\n        .post('/admin/api/v1/content/blogPost')\n        .send(getDefaultBlogPost())\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          blogPostItem = res.body;\n          success(res.body);\n        });\n    });\n  }\n\n  function deleteDummyBlogPost() {\n    return new Promise((success) => {\n      return request(app)\n        .delete('/admin/api/v1/content/blogPost/' + blogPostItem._cmeasyInstanceId.toString())\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          success();\n        });\n    });\n  }\n\n  function deleteAllDummyBlogPost() {\n    return new Promise((success) => {\n      request(app)\n        .get('/admin/api/v1/content/blogPost')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          return Promise.all(\n            _(res.body).map((item) => {\n              return new Promise((success, failure) => {\n                request(app)\n                  .delete('/admin/api/v1/content/blogPost/' + item._cmeasyInstanceId.toString())\n                  .expect(200)\n                  .expect('Content-Type', /json/)\n                  .end((err, res) => {\n                    if (err) {\n                      failure();\n                    }\n                    else {\n                      success(res.body);\n                    }\n                  });\n              });\n            }).value()\n          ).then((res) => {\n            return success(res);\n          });\n\n        })\n    });\n  }\n\n  function getDefaultBlogPost() {\n    return {\n      title: 'Test blog title ' + uuid.v4(),\n      content: 'Test blog content ' + uuid.v4()\n    }\n  }\n\n  /**\n   * Singleton item\n   */\n  describe('Cmeasy homePage model API:', function() {\n\n    this.timeout(6000);\n\n    let homePageItem;\n    describe('POST /api/v1/content/homePage', function() {\n      before(createDummyHomePage);\n      after(deleteDummyHomePage);\n      it('should create a home page entry', function(done) {\n        var newHomePage = _.merge(homePageItem, getDefaultHomePage());\n        request(app)\n          .post('/admin/api/v1/content/homePage')\n          .send(newHomePage)\n          .expect(200)\n          .expect('Content-Type', /json/)\n          .end((err, res) => {\n            res.body.title.toString().should.equal(newHomePage.title.toString());\n            done();\n          });\n      });\n    });\n\n    describe('GET /api/v1/content/homePage', function() {\n      before(createDummyHomePage);\n      after(deleteDummyHomePage);\n      it('should get a home page entry', function(done) {\n        request(app)\n          .get('/admin/api/v1/content/homePage/' + homePageItem._cmeasyId.toString())\n          .expect(200)\n          .expect('Content-Type', /json/)\n          .end((err, res) => {\n            res.body.title.toString().should.equal(homePageItem.title.toString());\n            done();\n          });\n      });\n    });\n\n\n    describe('GET /api/v1/content/homePage with multiple versions', function() {\n      before(() => {\n        return createDummyHomePage()\n          .then(createDummyHomePage)\n          .then(createDummyHomePage);\n      });\n      after(deleteDummyHomePage);\n      it('should only get a single home page entry', function(done) {\n        request(app)\n          .get('/admin/api/v1/content/homePage')\n          .expect(200)\n          .expect('Content-Type', /json/)\n          .end((err, res) => {\n            res.body.length.should.equal(1);\n            done();\n          });\n      });\n    });\n\n    describe('GET /api/v1/content/homePage history with multiple versions', function() {\n      before(() => {\n        return createDummyHomePage()\n          .then(createDummyHomePage)\n          .then(createDummyHomePage)\n          .then(createDummyHomePage);\n      });\n      after(deleteDummyHomePage);\n      it('should only get a single home page entry', function(done) {\n        request(app)\n          .get('/admin/api/v1/content/homePage/homePage/history')\n          .expect(200)\n          .expect('Content-Type', /json/)\n          .end((err, res) => {\n            res.body.length.should.equal(4);\n            done();\n          });\n      });\n    });\n\n    describe('GET /api/v1/content/homePage without prior instance', function() {\n      after(deleteDummyHomePage);\n      it('should get a home page entry', function(done) {\n        request(app)\n          .get('/admin/api/v1/content/homePage/' + 'homePage')\n          .expect(200)\n          .expect('Content-Type', /json/)\n          .end((err, res) => {\n            res.body.title.toString().should.equal('Default Home Page Title');\n            done();\n          });\n      });\n    });\n\n    function createDummyHomePage() {\n      return new Promise((success) => {\n        return request(app)\n          .post('/admin/api/v1/content/homePage')\n          .send(getDefaultHomePage())\n          .expect(200)\n          .expect('Content-Type', /json/)\n          .end((err, res) => {\n            homePageItem = res.body;\n            success(res.body);\n          });\n      });\n    }\n\n    function deleteDummyHomePage() {\n      return new Promise((success) => {\n        return request(app)\n          .delete('/admin/api/v1/content/homePage/' + homePageItem._cmeasyId.toString())\n          .expect(200)\n          .expect('Content-Type', /json/)\n          .end((err, res) => {\n            success();\n          });\n      });\n    }\n\n    function getDefaultHomePage() {\n      return {\n        title: 'Test home page title ' + uuid.v4()\n      }\n    }\n  });\n});\n"]}