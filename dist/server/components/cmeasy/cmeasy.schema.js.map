{"version":3,"sources":["../../../../server/components/cmeasy/cmeasy.schema.js"],"names":[],"mappings":"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","file":"cmeasy.schema.js","sourcesContent":["'use strict';\n\nimport _ from 'lodash';\nimport uuid from 'uuid';\nimport Promise from 'bluebird';\n\n\n/**\n *\n */\nexport default function(namespace, mongoose, cmeasy){\n  var schemaModel = createMongooseModel(namespace, mongoose, cmeasy);\n\n  addMetaSchema(schemaModel, cmeasy);\n\n  return schemaModel;\n}\n\n/**\n *\n */\nfunction createMongooseModel(namespace, mongoose, cmeasy){\n  return mongoose.model(getMongoSchemaName(namespace, cmeasy), new mongoose.Schema(getSchemaType(cmeasy), getOptions()));\n}\n\n/**\n *\n */\nfunction getSchemaType(cmeasy){\n  return {\n    meta: getMetaType(cmeasy),\n    definition: {}\n  };\n}\n\n/**\n *\n * Defines both the mongoose Schema.meta types and the MetaSchema.definition.meta instance\n *\n * TODO reuse this for defaulting a new Schema.meta values\n *\n */\nfunction getMetaType(cmeasy){\n\n  return {\n    //TODO allow this to be edited -> updates all endpoints / previous models\n    [cmeasy.getIdKey()]: {\n      $type: String,\n      displayColumn: true,\n      disableEdit: false, //Note this is a special case where when creating we do allow it to be edited\n      label: 'Schema Id',\n      required: true\n    },\n    dateCreated: {\n      $type: Number,\n      default: Date.now,\n      disableEdit: true\n    },\n    author: {\n      $type: String,\n      default: 'Server default',\n      disableEdit: true\n    },\n    comment: {\n      $type: String,\n      default: 'Server seed',\n      disableEdit: false,\n      disableDisplay: true\n    },\n\n\n    singleton: {\n      $type: Boolean,\n      default: false,\n      disableEdit: false\n    },\n    disableDelete: {\n      $type: Boolean,\n      default: false,\n      disableEdit: false\n    },\n    disableCreate: {\n      $type: Boolean,\n      default: false,\n      disableEdit: false\n    }\n  }\n}\n\n/**\n *\n */\nfunction getOptions(){\n  return {\n    strict: false,\n    typeKey: '$type'\n  };\n}\n\n/**\n * Meta Schema defining schema structure/definition\n */\nfunction addMetaSchema(schemaModel, cmeasy){\n  schemaModel.createAsync(getMetaSchema(cmeasy));\n  return schemaModel;\n}\n\n/**\n *\n */\nfunction getMongoSchemaName(namespace, cmeasy){\n  return `${getSafeName(namespace)}_Schema_${cmeasy.getSchemaMetaId()}`;\n}\n\n/**\n *\n * @param name\n */\nfunction getSafeName(name){\n  return _.camelCase((name || '').toString().replace(/\\s/g, ''));\n}\n\n/**\n * Replace all $type references with type\n */\nfunction getMetaSchemaType(cmeasy){\n  return _(getMetaType(cmeasy))\n    .map(function(item, key){\n      return {[key]: _.merge(_.omit(item, '$type'), {type: getPrototypeName(item.$type)})};\n    })\n    .reduce(_.merge);\n}\n\n/**\n *\n * @param prototype\n * @returns {*}\n */\nfunction getPrototypeName(prototype){\n  if (typeof prototype.name !== 'undefined') {\n    return prototype.name;\n  }\n  else {\n    return /function (.+)\\(/.exec(prototype.toString())[1];\n  }\n}\n\n/**\n *\n * @param model\n */\nfunction getMetaSchema(cmeasy){\n  return {\n\n    meta: {\n      dateCreated: Date.now(),\n      author: 'Server',\n      comment: 'Initial seed',\n      [cmeasy.getIdKey()]: cmeasy.getSchemaMetaId()\n    },\n\n    definition: {\n      meta: getMetaSchemaType(cmeasy),\n      definition: {\n        type: '__schemaType__'\n      }\n    }\n  }\n}\n"]}