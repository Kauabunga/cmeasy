{"version":3,"sources":["../../../../server/components/cmeasy/cmeasy.model.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;sBAEC,QAAQ;;;;AACtB,IAAM,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;qBAEZ,UAAS,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE;AAC/C,MAAI,aAAa,YAAA,CAAC;AAClB,MAAI,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,KAAK,CAAC,EAAE,QAAQ,CAAC,UAAU,EAAE,CAAC,EAAE;AACtF,iBAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;GACjF,MAAM;AACL,iBAAa,GAAG,QAAQ,CAAC,KAAK,CAC5B,iBAAiB,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,KAAK,CAAC,EAC/C,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,CAAC,CACtC,CAAC;GACH;;;AAGD,YAAU,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;;AAElC,SAAO,aAAa,CAAC;CACtB;;AAED,SAAS,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE;AACjC,SAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAClB,IAAI,EAAE,CACN,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CACpD,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;CAC/D;;AAED,SAAS,UAAU,GAAG;AACpB,SAAO;AACL,UAAM,EAAE,KAAK;AACb,WAAO,EAAE,OAAO;GACjB,CAAC;CACH;;AAED,SAAS,iBAAiB,CAAC,SAAS,EAAE,KAAK,EAAE;AAC3C,SAAU,WAAW,CAAC,SAAS,CAAC,eAAU,KAAK,CAAC,KAAK,EAAE,CAAG;CAC3D;;;;;AAKD,SAAS,WAAW,CAAC,IAAI,EAAE;AACzB,SAAO,oBAAE,SAAS,CAAC,CAAC,IAAI,IAAI,EAAE,CAAA,CAAE,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;CAChE;;AAED,SAAS,2BAA2B,CAAC,QAAQ,EAAE;AAC7C,SAAO,UAAS,KAAK,EAAE;AACrB,WAAO,yBAAE,KAAK,CAAC,CAAC,GAAG,CAAC,UAAS,IAAI,EAAE;AACjC,UAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE;AAC5C,YAAI,CAAC,MAAM,EAAE,CAAC;AACd,eAAO,SAAS,CAAC;OAClB,MACI;AACH,eAAO,IAAI,CAAC;OACb;KACF,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC;GACnB,CAAA;CACF","file":"cmeasy.model.js","sourcesContent":["'use strict';\n\nimport _ from 'lodash';\nconst R = require('ramda');\n\nexport default function(cmeasy, mongoose, model) {\n  let mongooseModel;\n  if (R.contains(getMongoModelName(cmeasy.getNamespace(), model), mongoose.modelNames())) {\n    mongooseModel = mongoose.model(getMongoModelName(cmeasy.getNamespace(), model));\n  } else {\n    mongooseModel = mongoose.model(\n      getMongoModelName(cmeasy.getNamespace(), model),\n      new mongoose.Schema({}, getOptions())\n    );\n  }\n\n  // Remove any dud models from the db\n  cleanModel(cmeasy, mongooseModel);\n\n  return mongooseModel;\n}\n\nfunction cleanModel(cmeasy, model) {\n  return model.find({})\n    .exec()\n    .then(removeModelsWithoutProperty(cmeasy.getIdKey()))\n    .then(removeModelsWithoutProperty(cmeasy.getInstanceKey()));\n}\n\nfunction getOptions() {\n  return {\n    strict: false,\n    typeKey: '$type'\n  };\n}\n\nfunction getMongoModelName(namespace, model) {\n  return `${getSafeName(namespace)}_Model_${model.getId()}`;\n}\n\n/**\n * @param name\n */\nfunction getSafeName(name) {\n  return _.camelCase((name || '').toString().replace(/\\s/g, ''));\n}\n\nfunction removeModelsWithoutProperty(property) {\n  return function(items) {\n    return _(items).map(function(item) {\n      if (!item[property] || item[property] === '') {\n        item.remove();\n        return undefined;\n      }\n      else {\n        return item;\n      }\n    }).filter().value;\n  }\n}\n"]}